import { writeFileSync } from "fs";
import { resolve } from "path";
import { createUnplugin } from "unplugin";
import { parseEnvExampleKeys } from "./parse-env-example-keys";
import type { Options } from "../types";

const createPlugin = createUnplugin<Options | undefined>((options) => {
  return {
    name: "@import-meta-env/typescript",

    buildStart() {
      const dts = (() => {
        const outDir = options?.outDir ?? ".";

        return resolve(process.cwd(), outDir, "import-meta-env.d.ts");
      })();
      if (dts === null) return;

      const envExampleKeys = parseEnvExampleKeys(options?.example);
      const content = [
        "// Generated by '@import-meta-env/typescript'",
        "",
        "interface ImportMetaEnv {",
        ...envExampleKeys.map((key) => `  readonly ${key}: string;`),
        "}",
        "",
        "interface ImportMeta {",
        "  readonly env: ImportMetaEnv;",
        "}",
        "",
      ].join("\n");
      const outputPath = resolve(process.cwd(), dts);
      writeFileSync(outputPath, content, "utf8");
    },
  };
});

export default createPlugin;
