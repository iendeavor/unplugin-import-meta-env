name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  import-meta-env:
    name: "import-meta-env - node@${{ matrix.node_version }}, ${{ matrix.os }}"

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            node_version: 16

      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ^7

      - name: Set node version to ${{ matrix.node_version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node_version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm i

      - name: Check formatting
        run: pnpm prettier --check .

      - name: Build packages
        run: pnpm --recursive --aggregate-output --filter @import-meta-env/* run build

      - name: Install binary
        run: pnpm i

      - name: Test packages
        run: pnpm --recursive --aggregate-output --filter @import-meta-env/* run test

  docker-examples:
    name: "example - ${{ matrix.example }}, node@${{ matrix.node_version }}, ${{ matrix.os }}"

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        example: ["docker-starter-example"]

        include:
          - os: ubuntu-latest
            node_version: 18

      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set node version to ${{ matrix.node_version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node_version }}
          cache: "npm"
          cache-dependency-path: packages/examples/${{ matrix.example }}/package-lock.json

      - name: Test ${{ matrix.example }}
        run: |
          cd packages/examples/${{ matrix.example }}
          npm i
          node test.js

  pnpm-examples:
    name: "example - ${{ matrix.example }}, node@${{ matrix.node_version }}, ${{ matrix.os }}"

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        example:
          [
            "babel-starter-example",
            "create-next-app-example",
            "create-react-app-example",
            "create-vue-app-example",
            "esbuild-starter-example",
            "jest-example",
            "mocha-example",
            "process-env-example",
            "rollup-plugin-babel-example",
            "rollup-starter-example",
            "vite-alpine-example",
            "vite-built-in-import-meta-env-example",
            "vite-config-build-assets-dir-example",
            "vite-config-build-out-dir-example",
            "vite-legacy-example",
            "vite-preact-example",
            "vite-react-example",
            "vite-solid-example",
            "vite-starter-example",
            "vite-svelte-example",
            "vite-vanilla-example",
            "vite-vanilla-ts-example",
            "vite-vue-jsx-example",
            "vite-vue-ts-example",
            "vitest-example",
            "webpack-babel-loader-example",
            "webpack-starter-example",
            "webpack-ts-loader-example",
          ]
        include:
          - os: ubuntu-latest
            node_version: 16

      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ^7

      - name: Set node version to ${{ matrix.node_version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node_version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm i

      - name: Build packages
        run: pnpm --recursive --aggregate-output --filter @import-meta-env/* run build

      - name: Install binary
        run: pnpm i

      - name: Test ${{ matrix.example }}
        run: |
          cd packages/examples/${{ matrix.example }}
          node test.js

  yarn-examples:
    name: "example - ${{ matrix.example }}, node@${{ matrix.node_version }}, ${{ matrix.os }}"

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        example:
          [
            "@vue+cli@4-example",
            "@vue+cli@5-example",
            "create-nuxt-app-example",
            "nuxt-bridge-example",
          ]

        include:
          - os: ubuntu-latest
            node_version: 16

      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ^7

      - name: Set node version to ${{ matrix.node_version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node_version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm i

      - name: Build packages
        run: pnpm --recursive --aggregate-output --filter @import-meta-env/* run build

      - name: Test ${{ matrix.example }}
        run: |
          cd packages/examples/${{ matrix.example }}
          yarn install
          node test.js

  compatibility-examples:
    name: "example - ${{ matrix.example }}, node@${{ matrix.node_version }}, ${{ matrix.os }}"

    runs-on: ${{ matrix.os }}

    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        node_version: [14, 16]
        os: ["ubuntu-latest"]
        example: ["compatibility-example"]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ^7

      - name: Set node version to ${{ matrix.node_version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node_version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm i

      - name: Build packages
        run: pnpm --recursive --aggregate-output --filter @import-meta-env/* run build

      - name: Test ${{ matrix.example }}
        run: |
          cd packages/examples/${{ matrix.example }}
          yarn install
          node test.js

  docs:
    name: "docs"

    if: github.ref_name == 'main'

    needs:
      - import-meta-env
      - docker-examples
      - pnpm-examples
      - yarn-examples
      - compatibility-examples

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ^7

      - name: Install dependencies
        run: pnpm i

      - name: Build docs
        run: pnpm run docs:build

      - name: Commit files
        run: |
          cd docs/.vitepress/dist
          git init
          git branch -m gh-pages
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "docs: deploy"

      - name: Push docs
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          directory: docs/.vitepress/dist
          force: true
